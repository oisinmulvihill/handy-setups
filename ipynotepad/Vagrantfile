# -*- mode: ruby -*-
# vi: set ft=ruby :
#

# Required plugin(s):
#
#   vagrant plugin install vagrant-cachier
#
SCRIPTLIBDIR = ENV['SCRIPTLIBDIR'] || '../scriptlib'

VAGRANT_BOX = ENV['VAGRANT_BOX'] || '-error-not-set-'

VAGRANT_ADDRESS = ENV['VAGRANT_ADDRESS'] || '192.168.22.27'

# General params that might need tweaking later on.
VAGRANT_MEMORY_SIZE = ENV['VAGRANT_MEMORY_SIZE'] || '1048'
VAGRANT_CPUS = ENV['VAGRANT_CPUS'] || "1"

# The configuration for the machine set up.
VAGRANT_WORKING_DIRECTORY = ENV['WORKING_DIRECTORY'] || '/vagrant'

#
VAGRANT_SALT_ROOT =  ENV['VAGRANT_SALT_ROOT'] || '../salt'


Vagrant.configure("2") do |config|

  config.vm.provider :virtualbox do |vb|
    vb.gui = false
    vb.customize ["modifyvm", :id, "--memory", VAGRANT_MEMORY_SIZE]
    vb.customize ["modifyvm", :id, "--cpus", VAGRANT_CPUS]
  end

  config.vm.box = VAGRANT_BOX

  config.ssh.forward_x11 = true
  config.cache.enable_nfs = true
  config.cache.auto_detect = true

  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true
  config.vm.define 'ipynotepad' do |node|
    node.vm.hostname = 'salt'
    node.vm.network :private_network, ip: VAGRANT_ADDRESS
    node.hostmanager.aliases = %w(www.ipynotepad ipynotepad salt)
  end


  # Mounted points:
  #
  config.vm.synced_folder ENV['HOME'], '/home/vagrant/host_home'


  # Saltstack mounts and other utility mounts
  config.vm.synced_folder "#{VAGRANT_SALT_ROOT}/vagrant-etc-salt/", "/srv/etc-salt"
  config.vm.synced_folder "#{VAGRANT_SALT_ROOT}/roots/", "/srv/salt/"
  config.vm.synced_folder "#{VAGRANT_SALT_ROOT}/saltstack-formula/", "/srv/saltstack-formula/"
  config.vm.synced_folder "#{VAGRANT_SALT_ROOT}/pillar/", "/srv/pillar/"
  config.vm.synced_folder SCRIPTLIBDIR, '/vagrant/scriptlib'

  # Copy in salt keys, accept the new minion keys and kick off the initial provision
  # config.vm.provision :shell, :inline => "sudo /bin/bash /vagrant/scriptlib/saltstack_master_bootstrap.sh"
  # config.vm.provision :shell, :inline => "sudo /bin/bash /vagrant/scriptlib/saltstack_vagrant_bootstrap.sh ipynotepad-01"
  # config.vm.provision :shell, :inline => "sudo salt-call -l debug state.highstate"

  config.vm.provision :salt do |salt|
    salt.run_highstate = true
    salt.minion_config = "#{VAGRANT_SALT_ROOT}/vagrant-etc-salt/minion"
    salt.verbose = true
    salt.bootstrap_options = "-X"  # Disable autostart of minion
    #salt.pillar({})
  end


end
